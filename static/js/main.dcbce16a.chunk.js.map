{"version":3,"sources":["Components/img/me.jpg","Components/img/hobbies/draw1.png","Components/img/hobbies/draw2.png","Components/img/hobbies/draw3.png","Components/img/hobbies/draw4.png","Components/img/hobbies/game1.png","Components/img/hobbies/game2.png","Components/Me.js","Components/Hobbies.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Me","className","src","MyImage","href","Hobbies","Drawing1","Drawing2","Drawing3","Drawing4","Game1","Game2","Component","Contact","App","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,gOCG5B,SAASC,IACpB,OACI,yBAAKC,UAAU,WACX,0CACA,yBAAKA,UAAU,YAAYC,IAAKC,MAChC,uEACA,8FACA,kHACA,oHACA,qMAEA,+DACA,0DACA,2BAAG,uBAAGC,KAAK,IAAR,eACH,2BAAG,uBAAGA,KAAK,IAAR,WACH,2BAAG,uBAAGA,KAAK,IAAR,gB,0GCTMC,E,iLAEb,OACI,yBAAKJ,UAAU,mBACX,0CACA,uCACA,yBAAKA,UAAU,cACX,yBAAKC,IAAKI,MACV,yBAAKJ,IAAKK,MACV,yBAAKL,IAAKM,MACV,yBAAKN,IAAKO,OAEd,sCACA,yBAAKR,UAAU,cACX,yBAAKC,IAAKQ,MACV,yBAAKR,IAAKS,OAEd,wCACA,yBAAKV,UAAU,oB,GAlBMW,aCPhBC,E,iLAEb,OACI,yBAAKZ,UAAU,WACX,wCACA,8BACI,4CACA,gCACA,6CACA,gCACA,+CACA,mCACA,8C,GAZiBW,a,eCUhBE,E,iLAEjB,OACE,kBAAC,IAAD,KACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,UACb,iDAEF,wBAAIA,UAAU,UACZ,4BACE,kBAAC,IAAD,CAAMc,GAAG,OAAT,OAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,cAON,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,OAChB,kBAACjB,EAAD,OAEF,kBAAC,IAAD,CAAOiB,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,a,GAnCqBL,aCAbM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dcbce16a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.c51f8fc8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/draw1.f57d09b3.png\";","module.exports = __webpack_public_path__ + \"static/media/draw2.bfc9666f.png\";","module.exports = __webpack_public_path__ + \"static/media/draw3.c1713cb4.png\";","module.exports = __webpack_public_path__ + \"static/media/draw4.d643f7db.png\";","module.exports = __webpack_public_path__ + \"static/media/game1.7e105543.png\";","module.exports = __webpack_public_path__ + \"static/media/game2.a5089bc2.png\";","import React from 'react'\nimport MyImage from './img/me.jpg'\n\nexport default function Me() {\n    return (\n        <div className=\"Content\">\n            <h2>This is Me</h2>\n            <img className=\"UserImage\" src={MyImage}></img>\n            <p>My name is Natalie and I am 33 years old</p>\n            <p>I was born in Damme 1986. Where I lived until I was 20 I guess.</p>\n            <p>I moved to Hamburg 2006 where I visited the HTK (Hamburger Technische Kunstschule).</p>\n            <p>I studied at the University of Hamburg and look what it got me. Nothing. That's what.</p>\n            <p>Now I'm at the DCI where I'm living my best live with my best friend forever Peter!!\n            He is so nice. He almost never says something mean. And also he likes white corn.</p>\n            <p>And here is another line oh yes.</p>\n            <h3>Some Websites I use a lot:</h3>\n            <p><a href=\"\">Deviantart</a></p>\n            <p><a href=\"\">Google</a></p>\n            <p><a href=\"\">tumblr.com</a></p>\n        </div >\n    )\n}\n","import React, { Component } from 'react'\nimport Drawing1 from './img/hobbies/draw1.png'\nimport Drawing2 from './img/hobbies/draw2.png'\nimport Drawing3 from './img/hobbies/draw3.png'\nimport Drawing4 from './img/hobbies/draw4.png'\n\nimport Game1 from './img/hobbies/game1.png'\nimport Game2 from './img/hobbies/game2.png'\n\nexport default class Hobbies extends Component {\n    render() {\n        return (\n            <div className=\"Content Hobbies\">\n                <h2>My Hobbies</h2>\n                <h3>Drawing</h3>\n                <div className=\"HobbieLine\">\n                    <img src={Drawing1}></img>\n                    <img src={Drawing2}></img>\n                    <img src={Drawing3}></img>\n                    <img src={Drawing4}></img>\n                </div>\n                <h3>Gaming</h3>\n                <div className=\"HobbieLine\">\n                    <img src={Game1}></img>\n                    <img src={Game2}></img>\n                </div>\n                <h3>Exercise</h3>\n                <div className=\"HobbieLine\"></div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className=\"Content\">\n                <h2>Write me</h2>\n                <form>\n                    <label>Your Name</label>\n                    <input />\n                    <label>Your Email</label>\n                    <input />\n                    <label>Your Message</label>\n                    <textarea />\n                    <button>Send</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport Me from './Components/Me'\nimport Hobbies from './Components/Hobbies'\nimport Contact from './Components/Contact'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"Banner\">\n            <h1>Website about me</h1>\n          </div>\n          <ul className=\"Navbar\">\n            <li>\n              <Link to=\"/Me\">\n                Me\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/Hobbies\">\n                Hobbies\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/Contact\">\n                Contact\n              </Link>\n            </li>\n          </ul>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/Me\">\n            <Me />\n          </Route>\n          <Route path=\"/Hobbies\">\n            <Hobbies />\n          </Route>\n          <Route path=\"/Contact\">\n            <Contact />\n          </Route>\n        </Switch>\n\n      </Router>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}